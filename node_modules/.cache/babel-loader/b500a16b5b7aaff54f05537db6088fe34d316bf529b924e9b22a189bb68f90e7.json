{"ast":null,"code":"import React, { useContext } from \"react\";\nfunction startTimer(counter) {\n  let d = Number(counter);\n\n  // maths logic that returns minutes and seconds\n  if (d <= 0) {\n    return \"00:00:00\";\n  } else {\n    let m = Math.floor(d % 3600 / 60);\n    let s = Math.floor(d % 3600 % 60);\n    let mDisplay = m <= 9 ? \"0\" + m + \":\" : m + \":\";\n    let sDisplay = s <= 9 ? \"0\" + s : s;\n    return mDisplay + sDisplay;\n  }\n}\nconst {\n  counter,\n  setCounter\n} = useContext(PlayerContext);\n\n// define a function to handle the timer tick\nconst handleTimerTick = () => {\n  // update the remaining time\n  setCounter(time => time - 1);\n};\n\n// start the timer when the component mounts\nReact.useEffect(() => {\n  const timer = setInterval(handleTimerTick, 1000);\n\n  // clean up the timer when the component unmounts\n  return () => clearInterval(timer);\n}, []);\nReact.useEffect(() => {\n  if (counter === 0) {\n    handleEndQuiz();\n  }\n}, [counter]);\nexport { startTimer };","map":{"version":3,"names":["React","useContext","startTimer","counter","d","Number","m","Math","floor","s","mDisplay","sDisplay","setCounter","PlayerContext","handleTimerTick","time","useEffect","timer","setInterval","clearInterval","handleEndQuiz"],"sources":["/Users/Meca/Documents/Web Projects/world-quiz/src/containers/Game/timer.js"],"sourcesContent":["import React, { useContext } from \"react\";\n\nfunction startTimer(counter) {\n    let d = Number(counter);\n\n    // maths logic that returns minutes and seconds\n    if (d <= 0) {\n        return \"00:00:00\";\n    } else {\n        let m = Math.floor((d % 3600) / 60);\n        let s = Math.floor((d % 3600) % 60);\n\n        let mDisplay = m <= 9 ? \"0\" + m + \":\" : m + \":\";\n        let sDisplay = s <= 9 ? \"0\" + s : s;\n\n        return mDisplay + sDisplay;\n    }\n}\n\nconst { counter, setCounter } = useContext(PlayerContext);\n\n// define a function to handle the timer tick\nconst handleTimerTick = () => {\n    // update the remaining time\n    setCounter((time) => time - 1);\n};\n\n// start the timer when the component mounts\nReact.useEffect(() => {\n    const timer = setInterval(handleTimerTick, 1000);\n\n    // clean up the timer when the component unmounts\n    return () => clearInterval(timer);\n}, []);\n\nReact.useEffect(() => {\n    if (counter === 0) {\n        handleEndQuiz();\n    }\n}, [counter]);\n\nexport { startTimer };\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AAEzC,SAASC,UAAUA,CAACC,OAAO,EAAE;EACzB,IAAIC,CAAC,GAAGC,MAAM,CAACF,OAAO,CAAC;;EAEvB;EACA,IAAIC,CAAC,IAAI,CAAC,EAAE;IACR,OAAO,UAAU;EACrB,CAAC,MAAM;IACH,IAAIE,CAAC,GAAGC,IAAI,CAACC,KAAK,CAAEJ,CAAC,GAAG,IAAI,GAAI,EAAE,CAAC;IACnC,IAAIK,CAAC,GAAGF,IAAI,CAACC,KAAK,CAAEJ,CAAC,GAAG,IAAI,GAAI,EAAE,CAAC;IAEnC,IAAIM,QAAQ,GAAGJ,CAAC,IAAI,CAAC,GAAG,GAAG,GAAGA,CAAC,GAAG,GAAG,GAAGA,CAAC,GAAG,GAAG;IAC/C,IAAIK,QAAQ,GAAGF,CAAC,IAAI,CAAC,GAAG,GAAG,GAAGA,CAAC,GAAGA,CAAC;IAEnC,OAAOC,QAAQ,GAAGC,QAAQ;EAC9B;AACJ;AAEA,MAAM;EAAER,OAAO;EAAES;AAAW,CAAC,GAAGX,UAAU,CAACY,aAAa,CAAC;;AAEzD;AACA,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAC1B;EACAF,UAAU,CAAEG,IAAI,IAAKA,IAAI,GAAG,CAAC,CAAC;AAClC,CAAC;;AAED;AACAf,KAAK,CAACgB,SAAS,CAAC,MAAM;EAClB,MAAMC,KAAK,GAAGC,WAAW,CAACJ,eAAe,EAAE,IAAI,CAAC;;EAEhD;EACA,OAAO,MAAMK,aAAa,CAACF,KAAK,CAAC;AACrC,CAAC,EAAE,EAAE,CAAC;AAENjB,KAAK,CAACgB,SAAS,CAAC,MAAM;EAClB,IAAIb,OAAO,KAAK,CAAC,EAAE;IACfiB,aAAa,EAAE;EACnB;AACJ,CAAC,EAAE,CAACjB,OAAO,CAAC,CAAC;AAEb,SAASD,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}